public class MaxPointsFromCards {

    public static int maxScore(int[] cardPoints, int k) {
        int n = cardPoints.length;
        
        // Calculate the total sum of the array
        int totalSum = 0;
        for (int point : cardPoints) {
            totalSum += point;
        }
        
        // If k is equal to the size of the array, return the total sum
        if (k == n) {
            return totalSum;
        }
        
        // Find the sum of the subarray of size (n - k)
        int subarraySize = n - k;
        int minSubarraySum = 0;
        
        // Calculate the initial subarray sum of the first (n - k) elements
        for (int i = 0; i < subarraySize; i++) {
            minSubarraySum += cardPoints[i];
        }
        
        int currentSubarraySum = minSubarraySum;
        
        // Slide the window of size (n - k) across the array
        for (int i = subarraySize; i < n; i++) {
            currentSubarraySum += cardPoints[i] - cardPoints[i - subarraySize];
            minSubarraySum = Math.min(minSubarraySum, currentSubarraySum);
        }
        
        // The maximum score is the total sum minus the minimum subarray sum
        return totalSum - minSubarraySum;
    }

    public static void main(String[] args) {
        int[] cardPoints = {1, 2, 3, 4, 5, 6, 1};
        int k = 3;
        System.out.println("Maximum score: " + maxScore(cardPoints, k));  // Output: 12
    }
}
