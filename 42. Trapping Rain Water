import java.util.Stack;
 class Solution {
    public static int trap(int height[]) {
        int trappedWater = 0;
        Stack<Integer> stack = new Stack<>();

        for (int current = 0; current < height.length; current++) {
            while (!stack.isEmpty() && height[current] > height[stack.peek()]) {
                int top = stack.pop();
                if (stack.isEmpty()) {
                    break;
                }
                int distance = current - stack.peek() - 1;
                int boundedHeight = Math.min(height[current], height[stack.peek()]) - height[top];
                trappedWater += distance * boundedHeight;
            }
            stack.push(current);
        }

        return trappedWater;
    }

    public static void main(String[] args) {
        int height[] = {0,1,0,2,1,0,1,3,2,1,2,1};
        int trappedWater = trap(height);
        System.out.println("Trapped Water: " + trappedWater);
    }
}
