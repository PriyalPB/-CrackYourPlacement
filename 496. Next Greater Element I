import java.util.HashMap;
import java.util.Stack;

class NextGreaterElement {
    public int[] nextGreaterElement(int[] nums1, int[] nums2) {
        // Map to store the next greater element for each number in nums2
        HashMap<Integer, Integer> nextGreaterMap = new HashMap<>();
        // Stack to keep track of elements for which we are yet to find the next greater element
        Stack<Integer> stack = new Stack<>();
        
        // Traverse nums2
        for (int num : nums2) {
            // While stack is not empty and the current element is greater than the stack's top element
            while (!stack.isEmpty() && stack.peek() < num) {
                // Pop the top element from the stack and set the current element as its next greater element
                nextGreaterMap.put(stack.pop(), num);
            }
            // Push the current element onto the stack
            stack.push(num);
        }
        
        // For remaining elements in the stack, there are no greater elements, so map them to -1
        while (!stack.isEmpty()) {
            nextGreaterMap.put(stack.pop(), -1);
        }
        
        // Prepare the result array for nums1
        int[] result = new int[nums1.length];
        for (int i = 0; i < nums1.length; i++) {
            result[i] = nextGreaterMap.get(nums1[i]);
        }
        
        return result;
    }

    public static void main(String[] args) {
        Solution solution = new Solution();
        
        int[] nums1 = {4, 1, 2};
        int[] nums2 = {1, 3, 4, 2};
        int[] result1 = solution.nextGreaterElement(nums1, nums2);
        System.out.print("Output: ");
        for (int num : result1) {
            System.out.print(num + " ");
        }
        System.out.println(); // Expected output: [-1, 3, -1]

        int[] nums1_2 = {2, 4};
        int[] nums2_2 = {1, 2, 3, 4};
        int[] result2 = solution.nextGreaterElement(nums1_2, nums2_2);
        System.out.print("Output: ");
        for (int num : result2) {
            System.out.print(num + " ");
        }
        System.out.println(); // Expected output: [3, -1]
    }
}
