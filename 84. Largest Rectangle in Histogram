
import java.util.Stack;

public class ArrayHistogram {
    public static void largestRectangleArea(int heights[]) {
        
        int maxArea = 0;
        int nsr[] = new int[heights.length];
        int nsl[] = new int[heights.length]; 

        //Next smallest right
        Stack<Integer> s = new Stack<>();

        for(int i= heights.length-1;i>=0;i--){
            while(!s.isEmpty() && heights[s.peek()]>=heights[i]){
                s.pop();
            }
            if(s.isEmpty()){
                nsr[i]=heights.length;
            }else{
                nsr[i]=s.peek();
            }
            s.push(i);
        }

        //Next smallest left
        s = new Stack<>();

        for(int i= 0;i<heights.length;i++){
            while(!s.isEmpty() && heights[s.peek()]>=heights[i]){
                s.pop();
            }
            if(s.isEmpty()){
                nsl[i]=-1;
            }else{
                nsl[i]=s.peek();
            }
            s.push(i);
        }

        //Max Area
        for(int i= 0;i<heights.length;i++){
            int h = heights.length;
            int width = nsr[i]-nsl[i]-1;
            int currArea = h*width;
            maxArea = Math.max(currArea,maxArea);
        }
        System.out.println("The Max Area = "+maxArea);
    }
    public static void main(String [] args){
        int heights[] = {2,1,5,6,2,3};
        largestRectangleArea(heights);
    }
}
